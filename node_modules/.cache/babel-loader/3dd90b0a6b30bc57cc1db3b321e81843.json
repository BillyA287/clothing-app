{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const SelectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantitiy, cartItem) => accumulatedQuantitiy + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantitiy, cartItem) => accumulatedQuantitiy + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/billy_atim/Desktop/untitled folder/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","SelectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantitiy","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAIA,IAAI,CAACE,SAA5B,CAAtC;AAEP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACI,MAF+B,CAAvC;AAIP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACC,oBAAD,EAAuBC,QAAvB,KACED,oBAAoB,GAAGC,QAAQ,CAACC,QAFpC,EAGE,CAHF,CAHuC,CAA3C;AAUA,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACC,oBAAD,EAAuBC,QAAvB,KACED,oBAAoB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAFxD,EAGE,CAHF,CAHyC,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\n\nexport const SelectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n)\nexport const selectCartItemsCount = createSelector(\n         [selectCartItems],\n         cartItems =>\n           cartItems.reduce(\n             (accumulatedQuantitiy, cartItem) =>\n               accumulatedQuantitiy + cartItem.quantity,\n             0\n           )\n       );\n\n       export const selectCartTotal = createSelector(\n         [selectCartItems],\n         cartItems =>\n           cartItems.reduce(\n             (accumulatedQuantitiy, cartItem) =>\n               accumulatedQuantitiy + cartItem.quantity * cartItem.price,\n             0\n           )\n       );\n      "]},"metadata":{},"sourceType":"module"}