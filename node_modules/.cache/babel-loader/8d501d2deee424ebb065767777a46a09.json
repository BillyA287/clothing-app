{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSucess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSucess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* onSignUpSucess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/billy_atim/Desktop/untitled folder/clothing-app/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSucess","signOutFailure","signUpSuccess","signUpFailure","getSnapShotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onCheckUserSession","CHECK_USER_SESSION","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","signOut","onSignUpSucess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all,call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types'\n\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\nimport { signInSuccess,signInFailure , signOutSucess, signOutFailure, signUpSuccess, signUpFailure} from './user.actions';\n\n\n\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalData){\ntry {\nconst userRef = yield call(createUserProfileDocument,userAuth, additionalData)\nconst userSnapshot = yield userRef.get()\nyield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n}catch (error){\n yield put(signInFailure(error))\n }\n}\n\nexport function* isUserAuthenticated (){\n    try {\nconst userAuth = yield getCurrentUser();\nif(!userAuth) return;\nyield getSnapShotFromUserAuth(userAuth);\n\n    }catch (error){\nyield put(signInFailure(error))\n}\n}\n\nexport function* signInWithGoogle(){\ntry {\nconst {user} = yield auth.signInWithPopup(googleProvider)\nyield getSnapShotFromUserAuth(user)\n}catch (error){\n yield put(signInFailure(error))\n }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\ntry {\nconst {user} = yield auth.signInWithEmailAndPassword(email,password);\nyield getSnapShotFromUserAuth(user)\n\n}catch (error) {\nyield put(signInFailure(error))\n}\n}\n\n\n\nexport function* onCheckUserSession (){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\n\n\n\nexport function* signUp({payload: {email, password, displayName}}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      yield put (signUpSuccess({user, additionalData: {displayName}}))\n    } catch (error){\n     yield put (signUpFailure(error))\n    }\n}\n\n\n\nexport function* signInAfterSignUp({payload:{user, additionalData}}){\nyield getSnapShotFromUserAuth(user, additionalData)\n}\n\n\n\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield put(signOutSucess())\n    } catch (error){\n      put(signOutFailure(error))\n    }\n}\n\n\n\n\n\n\nexport function* onSignUpSucess (){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\n\n\nexport function* onSignUpStart () {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp )\n}\n\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\nexport function* onSignOutStart () {\n   yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut) \n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail )\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart),call(onSignUpStart)])\n}"]},"metadata":{},"sourceType":"module"}