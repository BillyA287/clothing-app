{"ast":null,"code":"var _jsxFileName = \"/Users/billy_atim/Desktop/untitled folder/client/src/components/page/shop/shop-page.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContainer from \"../../collections-overview/collections-overview.container\";\nimport CollectionsPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from \"../../../redux/shop/shop.actions\";\nimport WithSpinner from '../../with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from \"../../../redux/shop/shop.selectors\";\nimport './shop.styles';\nconst CollectionPageWithSpinner = WithSpinner(CollectionsPage);\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/billy_atim/Desktop/untitled folder/client/src/components/page/shop/shop-page.component.jsx"],"names":["React","useEffect","Route","CollectionsOverviewContainer","CollectionsPage","connect","fetchCollectionsStart","WithSpinner","createStructuredSelector","selectIsCollectionsLoaded","CollectionPageWithSpinner","ShopPage","match","isCollectionsLoaded","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAqB,kBAArB;AACA,OAAOC,4BAAP,MAAyC,2DAAzC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SACEC,yBADF,QAEO,oCAFP;AAGA,OAAO,eAAP;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAACH,eAAD,CAA7C;;AAEA,MAAMO,QAAQ,GAAG,CAAC;AAACL,EAAAA,qBAAD;AAAwBM,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAyD;AACxEZ,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAMF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,EAFtB;AAGI,IAAA,SAAS,EAAIX,4BAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACF;AAAvC,OAAgEE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeC,CAtBD;;AA0BA,MAAMC,eAAe,GAAGR,wBAAwB,CAAC;AAC/CK,EAAAA,mBAAmB,EAAEJ;AAD0B,CAAD,CAAhD;;AAKA,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AAC1CZ,EAAAA,qBAAqB,EAAE,MAAKY,QAAQ,CAACZ,qBAAqB,EAAtB;AADM,CAAf,CAA3B;;AAKA,eAAeD,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport {Route } from 'react-router-dom'\nimport CollectionsOverviewContainer from \"../../collections-overview/collections-overview.container\";\nimport CollectionsPage from '../collection/collection.component'\nimport {connect} from 'react-redux';\nimport { fetchCollectionsStart } from \"../../../redux/shop/shop.actions\";\nimport WithSpinner from '../../with-spinner/with-spinner.component'\nimport {createStructuredSelector} from 'reselect'\nimport {\n  selectIsCollectionsLoaded,\n} from \"../../../redux/shop/shop.selectors\";\nimport './shop.styles'\nconst CollectionPageWithSpinner = WithSpinner(CollectionsPage)\n\nconst ShopPage = ({fetchCollectionsStart, match, isCollectionsLoaded}) => {\n  useEffect(() =>{\n    fetchCollectionsStart()\n  }, [fetchCollectionsStart])\n\n\n \nreturn (\n  <div className=\"shop-page\">\n    <Route\n      exact\n      path={`${match.path}`}\n        component = {CollectionsOverviewContainer}\n        />\n    <Route\n      path={`${match.path}/:collectionId`}\n      render={(props) => (\n        <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />\n      )}\n    />\n  </div>\n);\n}\n\n  \n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\nfetchCollectionsStart: ()=> dispatch(fetchCollectionsStart())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)\n\n\n"]},"metadata":{},"sourceType":"module"}